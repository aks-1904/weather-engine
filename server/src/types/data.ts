export interface User {
  // User data to send on frontend
  id: string;
  username: string;
  email: string;
  role: "captain" | "analyst";
  created_at?: number; // Automatically generated by my sql
}

export interface IUser extends User {
  // User data to validate and send to sql database
  password: string;
}

export interface Vessel {
  id: string;
  name: string;
  imo_number: number;
  captain_id: string | null;
  created_at: Date;
}

export type VoyageStatus = "planned" | "active" | "completed";

export interface Waypoint {
  latitude: number;
  longitude: number;
  name?: string;
  order: number;
}

export interface Voyage {
  id: string;
  vessel_id: string;
  status: VoyageStatus;
  origin_port: string;
  destination_port: string;
  etd: Date | null;
  eta: Date | null;
  route_waypoints: Waypoint[] | null;
  created_at: Date;
}

export interface VoyageWithVessel extends Voyage {
  vessel_name?: string;
  vessel_imo_number?: number;
}

export interface WeatherData {
  temperature: number;
  humidity: number;
  windSpeed: number;
  windDirection: number;
  pressure: number;
  visibility: number;
  cloudCover: number;
  precipitation: number;
  weatherCode: number;
  timestamp: number;
  location: {
    lat: number;
    lon: number;
  };
}

export interface ForecastData {
  daily: WeatherData[];
  location: {
    lat: number;
    lon: number;
  };
}

export interface SpeedRecommendation {
  optimalSpeed: number;
  maxSafeSpeed: number;
  weatherFactors: {
    windSpeedFactor: number;
    visibilityFactor: number;
    precipitationFactor: number;
    waveFactor?: number;
  };
  riskLevel: "LOW" | "MEDIUM" | "HIGH" | "EXTREME";
  recommendations: string[];
}
